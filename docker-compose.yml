
services:
  broker:
    build:
      context: ./broker
      dockerfile: Dockerfile
    container_name: broker
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./broker/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - iot_net

  time_series_db:
    build:
      context: ./time_series_db
      dockerfile: Dockerfile
    container_name: time_series_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: timeseries_db
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    ports:
      - "3306:3306"
    volumes:
      - time_series_db_data:/var/lib/mysql
    networks:
      - iot_net


  time_series_db_adaptor:
    build:
      context: ./time_series_db_adaptor
      dockerfile: Dockerfile
    container_name: time_series_db_adaptor
    depends_on:
      - time_series_db
    environment:
      DB_HOST: time_series_db     
      DB_NAME: timeseries_db       
      DB_USER: admin
      DB_PASSWORD: admin
      DB_PORT: "3306"
    networks:
      - iot_net


  catalog:
    build:
      context: ./catalog
      dockerfile: Dockerfile
    container_name: catalog
    depends_on:
      - broker
      - time_series_db
    ports:
      - "8081:8080"  
    networks:
      - iot_net

  sensors:
    build:
      context: ./sensors
      dockerfile: Dockerfile
    container_name: sensors
    depends_on:
      - broker
      - catalog
    networks:
      - iot_net


  actuators:
    build:
      context: ./actuators
      dockerfile: Dockerfile
    container_name: actuators
    depends_on:
      - broker
      - catalog
    networks:
      - iot_net


  weather:
    build:
      context: ./weather
      dockerfile: Dockerfile
    container_name: weather
    depends_on:
      - broker
      - catalog
    networks:
      - iot_net


  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    container_name: bot
    depends_on:
      - broker
      - catalog
    networks:
      - iot_net

networks:
  iot_net:

volumes:
  time_series_db_data:
